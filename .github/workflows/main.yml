name: RDP-46h

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    # 2760 minutos = 46 horas
    runs-on: windows-latest
    timeout-minutes: 2760

    steps:
      - name: 🧹 Limpar espaço e preparar o sistema
        run: |
          Write-Host "==== Limpando arquivos inúteis ===="
          Stop-Service -Name wuauserv -ErrorAction SilentlyContinue
          Stop-Service -Name bits -ErrorAction SilentlyContinue

          $paths = @(
            "C:\Program Files (x86)\Microsoft Visual Studio",
            "C:\Program Files\Microsoft Visual Studio",
            "C:\ProgramData\chocolatey",
            "C:\Program Files\dotnet",
            "C:\hostedtoolcache",
            "C:\Users\runneradmin\AppData\Local\Temp",
            "C:\Users\runneradmin\AppData\Roaming\npm"
          )

          foreach ($p in $paths) {
              if (Test-Path $p) {
                  Remove-Item -Recurse -Force $p -ErrorAction SilentlyContinue
              }
          }

          powercfg -h off
          vssadmin delete shadows /all /quiet
          wevtutil cl System
          wevtutil cl Application
          Clear-RecycleBin -Force -ErrorAction SilentlyContinue
          Write-Host "Espaço livre atual (C:):"
          Get-PSDrive C

      - name: ⚙️ Ativar RDP
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP-Allow" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: 👤 Criar usuário RDP
        run: |
          Add-Type -AssemblyName System.Security
          $chars = ([char[]](33..126))
          $password = -join ((1..18) | ForEach-Object { $chars | Get-Random })
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires -Description "Conta de Acesso RDP"
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: 🌐 Instalar Tailscale (para conectar)
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath -UseBasicParsing
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=rdp-46h-$env:GITHUB_RUN_ID
          $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: 🔄 Manter RDP ativo
        run: |
          Write-Host "`n=== RDP ATIVO ==="
          Write-Host "IP (Tailscale): $env:TAILSCALE_IP"
          Write-Host "Usuário: RDP"
          Write-Host "Senha: $env:RDP_PASSWORD"
          Write-Host "=================`n"
          while ($true) {
              Write-Host "[$(Get-Date)] RDP ativo — aguardando até 46 horas..."
              Start-Sleep -Seconds 300
          }
